<?php

/**
 * @file
 * The password policy password tab module adds a separate tab to change password.
 */

/**
 * Implementation of hook_menu().
 */
function password_policy_password_tab_menu() {
  $items = array();

  $items['user/%user/password'] = array(
    'title' => 'Password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('password_policy_password_tab', 1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'password_policy_password_tab.pages.inc',
  );
  $items['admin/config/people/password_policy/password_tab'] = array(
    'title' => 'Password tab',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('password_policy_password_tab_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'password_policy_password_tab.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  return $items;
}

/**
 * Implementation of hook_admin_paths().
 */
function password_policy_password_tab_admin_paths() {
  $paths = array(
    'user/*/password' => TRUE,
  );
  return $paths;
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function password_policy_password_tab_form_user_profile_form_alter(&$form, &$form_state) {
  if (isset($form['account']['current_pass_required_values']['#value']['pass'])) {
    unset($form['account']['current_pass']);
    unset($form['account']['current_pass_required_values']['#value']['pass']);
  }

  // Hide core password field from user edit form.
  unset($form['account']['pass']);
}

/**
 * Implementation of hook_exit().
 *
 * This function acts on a drupal_goto from user_pass_reset form. The user is
 * redirected to the password change tab instead of the account edit form.
 */
function password_policy_password_tab_exit($destination = NULL) {
  static $processed = FALSE;

  // Check if this is a drupal_goto from the password reset page.
  if (!$processed && isset($destination) && arg(0) == 'user' && arg(1) == 'reset') {
    $url_parts = parse_url($destination);
    // Check if the redirect has a path.
    if (isset($url_parts['path'])) {
      // Check if the redirect path is user/%user/edit.
      $path = substr($url_parts['path'], 1);
      $args = arg(NULL, $path);
      if (count($args) == 3 && $args[0] == 'user' && $args[2] == 'edit') {
        // Prevent loops.
        $processed = TRUE;
        // Change the drupal_goto to our change password tab.
        $path .= preg_replace('/\/edit$/', '/password', $path);
        $opts = array();
        if (!empty($url_parts['fragment'])) {
          $opts['fragment'] = $url_parts['fragment'];
        }
        if (!empty($url_parts['query'])) {
          parse_str($url_parts['query'], $params);
          $opts['query'] = $params;
        }
        drupal_goto($path, $opts);
      }
    }
  }
}
